{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { colors } from \"../assets/colors\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getItem = function getItem(key, setItemState) {\n  var val;\n  return _regeneratorRuntime.async(function getItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          val = _context.sent;\n          setItemState(val);\n          return _context.abrupt(\"return\", val);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('error', _context.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar storeItem = function storeItem(key, value) {\n  var val;\n  return _regeneratorRuntime.async(function storeItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 3:\n          val = _context2.sent;\n          return _context2.abrupt(\"return\", val);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('error', _context2.t0.message);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nfunction getCode(email, setPassCode) {\n  return _regeneratorRuntime.async(function getCode$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://profesy.herokuapp.com/resetPass?email=\" + email).then(function (result) {\n            return result.json();\n          }).then(function (result) {\n            setPassCode(result.code);\n            return result;\n          }).catch(function (err) {\n            console.error(err);\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function Account(Props) {\n  var _useState = useState('N/A'),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState('N/A'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState('N/A'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState('false'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loggedIn = _useState8[0],\n      setLoggedIn = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passCode = _useState10[0],\n      setPassCode = _useState10[1];\n\n  var navigation = useNavigation();\n  getItem('username', setUsername);\n  getItem('email', setEmail);\n  getItem('name', setName);\n  getItem('loggedIn', setLoggedIn);\n  return _jsxs(SafeAreaView, {\n    style: {\n      width: '100%',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: 'black'\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 40,\n        marginTop: 20,\n        marginBottom: 20,\n        opacity: 0.75\n      },\n      children: \"Account\"\n    }), loggedIn === 'true' && _jsxs(View, {\n      style: {\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [_jsx(View, {\n        style: {\n          width: '75%',\n          padding: 10,\n          alignItems: 'center',\n          backgroundColor: colors.GREEN,\n          borderRadius: 5,\n          shadowColor: colors.GRAY,\n          shadowOffset: {\n            width: 2,\n            height: 2\n          },\n          shadowRadius: 0,\n          shadowOpacity: 1,\n          marginBottom: 20\n        },\n        children: _jsxs(Text, {\n          style: {\n            fontSize: 25,\n            color: 'white',\n            fontWeight: '700'\n          },\n          children: [name, _jsxs(Text, {\n            style: {\n              fontSize: 20,\n              color: 'white',\n              fontWeight: '400',\n              letterSpacing: 1,\n              opacity: 0.7\n            },\n            children: [' ', username]\n          })]\n        })\n      }), _jsx(View, {\n        style: {\n          width: '75%',\n          padding: 10,\n          alignItems: 'center',\n          backgroundColor: colors.ORANGE,\n          borderRadius: 5,\n          shadowColor: colors.GRAY,\n          shadowOffset: {\n            width: 2,\n            height: 2\n          },\n          shadowRadius: 0,\n          shadowOpacity: 1,\n          marginTop: 0,\n          marginBottom: 20\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 15,\n            color: 'white',\n            fontWeight: '500',\n            letterSpacing: 1\n          },\n          children: email\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: {\n        width: '75%',\n        padding: 10,\n        alignItems: 'center',\n        backgroundColor: colors.RED,\n        borderRadius: 5,\n        shadowColor: colors.GRAY,\n        shadowOffset: {\n          width: 2,\n          height: 2\n        },\n        shadowRadius: 0,\n        shadowOpacity: 1,\n        marginBottom: 20\n      },\n      onPress: function onPress() {\n        storeItem('name', 'N/A');\n        storeItem('username', 'N/A');\n        storeItem('email', 'N/A');\n        storeItem('loggedIn', 'false');\n        navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 30,\n          color: 'white',\n          fontWeight: '700',\n          letterSpacing: 1\n        },\n        children: loggedIn === 'true' ? 'Logout' : 'Login'\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/elitracy/Documents/Coding/Projects/Profesy/public/components/Account.tsx"],"names":["useState","useNavigation","AsyncStorage","colors","React","getItem","key","setItemState","val","console","log","message","storeItem","value","setItem","getCode","email","setPassCode","fetch","then","result","json","code","catch","err","error","Account","Props","username","setUsername","setEmail","name","setName","loggedIn","setLoggedIn","passCode","navigation","width","flexDirection","alignItems","backgroundColor","fontSize","marginTop","marginBottom","opacity","padding","GREEN","borderRadius","shadowColor","GRAY","shadowOffset","height","shadowRadius","shadowOpacity","color","fontWeight","letterSpacing","ORANGE","RED","navigate"],"mappings":"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","sourcesContent":["// IMPORTS\nimport { Text, SafeAreaView, View, TouchableOpacity } from 'react-native'\nimport { useState } from 'react'\nimport { useNavigation } from '@react-navigation/native'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../RootStackParams'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { colors } from '../assets/colors'\nimport React from 'react'\n\n// getItem - Params(key:string, setItemState: function) => string\nconst getItem = async (key: string, setItemState: any) => {\n  try {\n    const val = await AsyncStorage.getItem(key)\n    setItemState(val)\n    return val\n  } catch (e: any) {\n    console.log('error', e.message)\n  }\n}\n\n// storeItem - Params(key:string, value:any) => value\nconst storeItem = async (key: string, value: any) => {\n  try {\n    const val = await AsyncStorage.setItem(key, value)\n    return val\n  } catch (e: any) {\n    console.log('error', e.message)\n  }\n}\n\n// getCode - Params(email:string, setPassCode: function) => Promise\nasync function getCode(email: string, setPassCode: any): Promise<any> {\n  return await fetch(`https://profesy.herokuapp.com/resetPass?email=${email}`)\n    .then((result) => result.json())\n    .then((result) => {\n      setPassCode(result.code)\n      return result\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\ntype accountScreenProp = NativeStackNavigationProp<\n  RootStackParamList,\n  'Account'\n>\n\nexport function Account(Props: any) {\n  // SET STATES\n  const [username, setUsername] = useState('N/A')\n  const [email, setEmail] = useState('N/A')\n  const [name, setName] = useState('N/A')\n  const [loggedIn, setLoggedIn] = useState('false')\n  const [passCode, setPassCode] = useState('')\n  const navigation = useNavigation<accountScreenProp>()\n\n  getItem('username', setUsername)\n  getItem('email', setEmail)\n  getItem('name', setName)\n  getItem('loggedIn', setLoggedIn)\n\n  return (\n    <SafeAreaView\n      style={{\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'black',\n      }}\n    >\n      <Text\n        style={{ fontSize: 40, marginTop: 20, marginBottom: 20, opacity: 0.75 }}\n      >\n        Account\n      </Text>\n\n      {/*user is logged in*/}\n      {loggedIn === 'true' && (\n        <View\n          style={{\n            width: '100%',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          {/*NAME/USERNAME*/}\n          <View\n            style={{\n              width: '75%',\n              padding: 10,\n              alignItems: 'center',\n              backgroundColor: colors.GREEN,\n              borderRadius: 5,\n              shadowColor: colors.GRAY,\n              shadowOffset: { width: 2, height: 2 },\n              shadowRadius: 0,\n              shadowOpacity: 1,\n              marginBottom: 20,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 25,\n                color: 'white',\n                fontWeight: '700',\n              }}\n            >\n              {name}\n              <Text\n                style={{\n                  fontSize: 20,\n                  color: 'white',\n                  fontWeight: '400',\n                  letterSpacing: 1,\n                  opacity: 0.7,\n                }}\n              >\n                {' '}\n                {username}\n              </Text>\n            </Text>\n          </View>\n\n          {/*EMAIL*/}\n          <View\n            style={{\n              width: '75%',\n              padding: 10,\n              alignItems: 'center',\n              backgroundColor: colors.ORANGE,\n              borderRadius: 5,\n              shadowColor: colors.GRAY,\n              shadowOffset: { width: 2, height: 2 },\n              shadowRadius: 0,\n              shadowOpacity: 1,\n              marginTop: 0,\n              marginBottom: 20,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 15,\n                color: 'white',\n                fontWeight: '500',\n                letterSpacing: 1,\n              }}\n            >\n              {email}\n            </Text>\n          </View>\n\n          {/*CHANGE PASS*/}\n          {/* <TouchableOpacity\n            style={{\n              width: '75%',\n              padding: 10,\n              alignItems: 'center',\n              backgroundColor: colors.ORANGE,\n              borderRadius: 5,\n              shadowColor: colors.GRAY,\n              shadowOffset: { width: 2, height: 2 },\n              shadowRadius: 0,\n              shadowOpacity: 1,\n              marginTop: 0,\n              marginBottom: 20,\n            }}\n            onPress={() => {\n              getCode(email, setPassCode)\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 15,\n                color: 'white',\n                fontWeight: '500',\n                letterSpacing: 1,\n              }}\n            >\n              Reset Password\n            </Text>\n          </TouchableOpacity> */}\n        </View>\n      )}\n\n      {/*user is logged out*/}\n      {/*LOGOUT BUTTON*/}\n      <TouchableOpacity\n        style={{\n          width: '75%',\n          padding: 10,\n          alignItems: 'center',\n          backgroundColor: colors.RED,\n          borderRadius: 5,\n          shadowColor: colors.GRAY,\n          shadowOffset: { width: 2, height: 2 },\n          shadowRadius: 0,\n          shadowOpacity: 1,\n          marginBottom: 20,\n        }}\n        onPress={() => {\n          storeItem('name', 'N/A')\n          storeItem('username', 'N/A')\n          storeItem('email', 'N/A')\n          storeItem('loggedIn', 'false')\n          navigation.navigate('Login')\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 30,\n            color: 'white',\n            fontWeight: '700',\n            letterSpacing: 1,\n          }}\n        >\n          {loggedIn === 'true' ? 'Logout' : 'Login'}\n        </Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}