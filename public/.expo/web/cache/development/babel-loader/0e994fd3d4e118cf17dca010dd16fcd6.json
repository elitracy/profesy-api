{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport tailwind from 'tailwind-rn';\nimport { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { colors } from \"../assets/colors\";\nimport { sha256 } from 'js-sha256';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction loginAPI(username, password) {\n  return _regeneratorRuntime.async(function loginAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", fetch(\"https://profesy.herokuapp.com/login?username=\" + username + \"&password=\" + password).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            return data;\n          }).catch(function (err) {\n            console.error(err);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar storeItem = function storeItem(key, value) {\n  var val;\n  return _regeneratorRuntime.async(function storeItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 3:\n          val = _context2.sent;\n          return _context2.abrupt(\"return\", val);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('error', _context2.t0.message);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getItem = function getItem(key, setItemState) {\n  var val;\n  return _regeneratorRuntime.async(function getItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          val = _context3.sent;\n          setItemState(val);\n          return _context3.abrupt(\"return\", val);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('error', _context3.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nexport function LandingPage() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState('rgba(150, 150, 150, .5)'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usernameBG = _useState6[0],\n      setUsernameBG = _useState6[1];\n\n  var _useState7 = useState('rgba(150, 150, 150, .5)'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordBG = _useState8[0],\n      setPasswordBG = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      badLogin = _useState10[0],\n      setBadLogin = _useState10[1];\n\n  var _useState11 = useState('false'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loggedIn = _useState12[0],\n      setLoggedIn = _useState12[1];\n\n  var navigation = useNavigation();\n  getItem('loggedIn', setLoggedIn).then(function (response) {\n    if (loggedIn === 'true') {\n      navigation.navigate('Home');\n    }\n  });\n  return _jsxs(SafeAreaView, {\n    style: tailwind('w-full h-full justify-start items-center mt-20'),\n    children: [_jsx(StatusBar, {\n      animated: true,\n      backgroundColor: \"#61dafb\",\n      barStyle: 'dark-content',\n      showHideTransition: 'slide'\n    }), _jsx(View, {\n      style: styles.titleBorderStyles,\n      children: _jsx(Text, {\n        style: styles.titleStyles,\n        children: \"Profesi\"\n      })\n    }), _jsxs(View, {\n      style: {\n        width: '65%',\n        marginTop: 15\n      },\n      children: [_jsx(TextInput, {\n        onChangeText: setUsername,\n        autoCapitalize: \"none\",\n        onFocus: function onFocus() {\n          return setUsernameBG('#10b981');\n        },\n        onBlur: function onBlur() {\n          return setUsernameBG('rgba(150, 150, 150, .5)');\n        },\n        value: username,\n        clearTextOnFocus: true,\n        placeholder: \"Username\",\n        style: [styles.inputStyles, {\n          marginBottom: 10,\n          borderColor: usernameBG,\n          color: username === 'username' ? colors.GREY : 'black'\n        }]\n      }), _jsx(TextInput, {\n        onChangeText: setPassword,\n        autoCapitalize: \"none\",\n        clearTextOnFocus: true,\n        onFocus: function onFocus() {\n          return setPasswordBG('#10b981');\n        },\n        onBlur: function onBlur() {\n          return setPasswordBG('rgba(150, 150, 150, .5)');\n        },\n        style: [styles.inputStyles, {\n          marginBottom: 6,\n          borderColor: passwordBG,\n          color: password === 'password' ? colors.GREY : 'black'\n        }],\n        value: password,\n        placeholder: \"Password\",\n        secureTextEntry: true\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'column',\n          height: badLogin ? '16%' : '10%'\n        },\n        children: [badLogin ? _jsx(Text, {\n          style: styles.incorrectLoginStyles,\n          children: \"Incorrect login\"\n        }) : null, _jsx(TouchableOpacity, {\n          style: {\n            flex: 1\n          },\n          onPress: function onPress() {\n            return navigation.navigate('Signup');\n          },\n          children: _jsxs(Text, {\n            style: styles.signupPasswordStyles,\n            children: [\"Don\", \"'\", \"t have an account?\"]\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: {\n          borderColor: 'black',\n          width: '100%',\n          borderWidth: 2,\n          borderRadius: 20\n        },\n        onPress: function onPress() {\n          loginAPI(username, sha256(password)).then(function (res) {\n            if (res.loggedIn) {\n              storeItem('name', res.message.name);\n              storeItem('username', res.message.username);\n              storeItem('email', res.message.email);\n              storeItem('loggedIn', 'true');\n              setBadLogin(false);\n            } else setBadLogin(true);\n\n            res.loggedIn ? navigation.navigate('Home') : null;\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.loginStyles,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        style: {\n          width: '100%',\n          marginTop: 5\n        },\n        children: _jsx(Text, {\n          style: {\n            textAlign: 'center',\n            paddingVertical: 5,\n            color: colors.GRAY,\n            fontSize: 15\n          },\n          children: \"Skip\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  titleStyles: {\n    color: 'black',\n    fontSize: 80,\n    shadowColor: colors.PURPLE,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 0\n  },\n  titleBorderStyles: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.GREY,\n    marginBottom: '3%',\n    paddingRight: '8%',\n    paddingLeft: '8%'\n  },\n  inputStyles: {\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 8,\n    paddingLeft: 5,\n    fontSize: 15\n  },\n  incorrectLoginStyles: {\n    textAlign: 'center',\n    padding: 4,\n    paddingTop: 4,\n    color: 'red',\n    fontStyle: 'italic'\n  },\n  forgotPasswordStyles: {\n    textAlign: 'center',\n    padding: 4,\n    paddingTop: 8\n  },\n  signupPasswordStyles: {\n    textAlign: 'center',\n    padding: 2,\n    color: 'black'\n  },\n  loginStyles: {\n    color: 'black',\n    fontSize: 40,\n    textAlign: 'center',\n    paddingTop: 8,\n    paddingBottom: 8,\n    fontWeight: '300',\n    letterSpacing: 5,\n    shadowColor: colors.GREEN,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 0\n  }\n});","map":{"version":3,"sources":["/Users/elitracy/Documents/Coding/Projects/Profesy/public/components/LandingPage.tsx"],"names":["AsyncStorage","tailwind","useState","useNavigation","colors","sha256","React","loginAPI","username","password","fetch","then","res","json","data","catch","err","console","error","storeItem","key","value","setItem","val","log","message","getItem","setItemState","LandingPage","setUsername","setPassword","usernameBG","setUsernameBG","passwordBG","setPasswordBG","badLogin","setBadLogin","loggedIn","setLoggedIn","navigation","response","navigate","styles","titleBorderStyles","titleStyles","width","marginTop","inputStyles","marginBottom","borderColor","color","GREY","flexDirection","height","incorrectLoginStyles","flex","signupPasswordStyles","borderWidth","borderRadius","name","email","loginStyles","textAlign","paddingVertical","GRAY","fontSize","StyleSheet","create","shadowColor","PURPLE","shadowOffset","shadowOpacity","shadowRadius","borderBottomWidth","borderBottomColor","paddingRight","paddingLeft","padding","paddingTop","fontStyle","forgotPasswordStyles","paddingBottom","fontWeight","letterSpacing","GREEN"],"mappings":"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","sourcesContent":["//IMPORTS\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  TextInput,\n  View,\n  StatusBar,\n  TouchableOpacity,\n} from 'react-native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport tailwind from 'tailwind-rn'\nimport { useState } from 'react'\nimport { useNavigation } from '@react-navigation/native'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../RootStackParams'\nimport { colors } from '../assets/colors'\nimport { sha256 } from 'js-sha256'\nimport React from 'react'\n\ntype loginScreenProp = NativeStackNavigationProp<RootStackParamList, 'Login'>\n\n// loginAPI - Params(username:string, password:string) => {message:{}, loggedIn:bool}\nasync function loginAPI(username: string, password: string) {\n  return fetch(\n    `https://profesy.herokuapp.com/login?username=${username}&password=${password}`\n  )\n    .then((res) => {\n      return res.json()\n    })\n    .then((data) => {\n      return data\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n\n// storeItem - Params(key:string, value:any) => val:any\nconst storeItem = async (key: string, value: any) => {\n  try {\n    const val = await AsyncStorage.setItem(key, value)\n    return val\n  } catch (e: any) {\n    console.log('error', e.message)\n  }\n}\n\n// getItem - Params(key:string, steItemState:any) => val:any\nconst getItem = async (key: string, setItemState: any) => {\n  try {\n    const val = await AsyncStorage.getItem(key)\n    setItemState(val)\n    return val\n  } catch (e) {\n    console.log('error', e.message)\n  }\n}\n\nexport function LandingPage() {\n  // SET STATES\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [usernameBG, setUsernameBG] = useState('rgba(150, 150, 150, .5)')\n  const [passwordBG, setPasswordBG] = useState('rgba(150, 150, 150, .5)')\n  const [badLogin, setBadLogin] = useState(false)\n  const [loggedIn, setLoggedIn] = useState('false')\n\n  const navigation = useNavigation<loginScreenProp>()\n\n  // navigate to home screen if logged in\n  getItem('loggedIn', setLoggedIn).then((response) => {\n    if (loggedIn === 'true') {\n      navigation.navigate('Home')\n    }\n  })\n\n  // not logged in\n  return (\n    <SafeAreaView\n      style={tailwind('w-full h-full justify-start items-center mt-20')}\n    >\n      <StatusBar\n        animated={true}\n        backgroundColor=\"#61dafb\"\n        barStyle={'dark-content'}\n        showHideTransition={'slide'}\n      />\n      <View style={styles.titleBorderStyles}>\n        <Text style={styles.titleStyles}>Profesi</Text>\n      </View>\n      <View style={{ width: '65%', marginTop: 15 }}>\n        <TextInput\n          onChangeText={setUsername}\n          autoCapitalize=\"none\"\n          onFocus={() => setUsernameBG('#10b981')}\n          onBlur={() => setUsernameBG('rgba(150, 150, 150, .5)')}\n          value={username}\n          clearTextOnFocus={true}\n          placeholder=\"Username\"\n          style={[\n            styles.inputStyles,\n            {\n              marginBottom: 10,\n              borderColor: usernameBG,\n              color: username === 'username' ? colors.GREY : 'black',\n            },\n          ]}\n        />\n        <TextInput\n          onChangeText={setPassword}\n          autoCapitalize=\"none\"\n          clearTextOnFocus={true}\n          onFocus={() => setPasswordBG('#10b981')}\n          onBlur={() => setPasswordBG('rgba(150, 150, 150, .5)')}\n          style={[\n            styles.inputStyles,\n            {\n              marginBottom: 6,\n              borderColor: passwordBG,\n              color: password === 'password' ? colors.GREY : 'black',\n            },\n          ]}\n          value={password}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n        />\n        <View\n          style={{ flexDirection: 'column', height: badLogin ? '16%' : '10%' }}\n        >\n          {badLogin ? (\n            <Text style={styles.incorrectLoginStyles}>Incorrect login</Text>\n          ) : null}\n\n          {/*NOTE - Implement forgot password functionality*/}\n          {/* <TouchableOpacity\n            style={{ flex: 1 }}\n            onPress={() => console.log('USER FORGOT PASSWORD')}\n          >\n            <Text\n              style={[\n                styles.forgotPasswordStyles,\n                { paddingTop: badLogin ? 4 : 8 },\n              ]}\n            >\n              Forgot Password?\n            </Text>\n          </TouchableOpacity> */}\n\n          {/*SIGN UP*/}\n          <TouchableOpacity\n            style={{ flex: 1 }}\n            onPress={() => navigation.navigate('Signup')}\n          >\n            <Text style={styles.signupPasswordStyles}>\n              Don{\"'\"}t have an account?\n            </Text>\n          </TouchableOpacity>\n        </View>\n        {/*LOGIN BUTTON*/}\n        <TouchableOpacity\n          style={{\n            borderColor: 'black',\n            width: '100%',\n            borderWidth: 2,\n            borderRadius: 20,\n          }}\n          onPress={() => {\n            loginAPI(username, sha256(password)).then((res) => {\n              if (res.loggedIn) {\n                // store user info in cache\n                storeItem('name', res.message.name)\n                storeItem('username', res.message.username)\n                storeItem('email', res.message.email)\n                storeItem('loggedIn', 'true')\n                setBadLogin(false)\n              } else setBadLogin(true)\n              res.loggedIn ? navigation.navigate('Home') : null\n            })\n          }}\n        >\n          <Text style={styles.loginStyles}>Login</Text>\n        </TouchableOpacity>\n\n        {/*SKIP LOGIN*/}\n        <TouchableOpacity\n          onPress={() => navigation.navigate('Home')}\n          style={{ width: '100%', marginTop: 5 }}\n        >\n          <Text\n            style={{\n              textAlign: 'center',\n              paddingVertical: 5,\n              color: colors.GRAY,\n              fontSize: 15,\n            }}\n          >\n            Skip\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  )\n}\n\n// STYLES - NOTE: move to inline\nconst styles = StyleSheet.create({\n  titleStyles: {\n    color: 'black',\n    fontSize: 80,\n    shadowColor: colors.PURPLE,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 0,\n  },\n  titleBorderStyles: {\n    borderBottomWidth: 2,\n    borderBottomColor: colors.GREY,\n    marginBottom: '3%',\n    paddingRight: '8%',\n    paddingLeft: '8%',\n  },\n  inputStyles: {\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 8,\n    paddingLeft: 5,\n    fontSize: 15,\n  },\n  incorrectLoginStyles: {\n    textAlign: 'center',\n    padding: 4,\n    paddingTop: 4,\n    color: 'red',\n    fontStyle: 'italic',\n  },\n  forgotPasswordStyles: {\n    textAlign: 'center',\n    padding: 4,\n    paddingTop: 8,\n  },\n  signupPasswordStyles: {\n    textAlign: 'center',\n    padding: 2,\n    color: 'black',\n  },\n  loginStyles: {\n    color: 'black',\n    fontSize: 40,\n    textAlign: 'center',\n    paddingTop: 8,\n    paddingBottom: 8,\n    fontWeight: '300',\n    letterSpacing: 5,\n    shadowColor: colors.GREEN,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 0,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}