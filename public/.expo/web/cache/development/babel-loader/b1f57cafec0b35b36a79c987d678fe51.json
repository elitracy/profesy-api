{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getProfsByCourse(course, setFilteredData) {\n  return _regeneratorRuntime.async(function getProfsByCourse$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/profsByCourse?course=\" + course).then(function (result) {\n            return result.json();\n          }).then(function (result) {\n            setFilteredData(result.message);\n            return result;\n          }).catch(function (err) {\n            console.error(err);\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar getItem = function getItem(key, setStateItem) {\n  var val;\n  return _regeneratorRuntime.async(function getItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          val = _context2.sent;\n          setStateItem(val);\n          return _context2.abrupt(\"return\", val);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('error', _context2.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nexport var Courses = function Courses() {\n  return _jsx(Text, {\n    children: \"Hello from Courses\"\n  });\n};","map":{"version":3,"sources":["/Users/elitracy/Documents/Coding/Projects/Profesy/public/components/Courses.tsx"],"names":["AsyncStorage","React","getProfsByCourse","course","setFilteredData","fetch","then","result","json","message","catch","err","console","error","getItem","key","setStateItem","val","log","Courses"],"mappings":";;AAUA,OAAOA,YAAP,MAAyB,2CAAzB;AAOA,OAAOC,KAAP,MAAkB,OAAlB;;;AAOA,SAAeC,gBAAf,CACEC,MADF,EAEEC,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKeC,KAAK,iDAA+CF,MAA/C,CAAL,CACVG,IADU,CACL,UAACC,MAAD;AAAA,mBAAYA,MAAM,CAACC,IAAP,EAAZ;AAAA,WADK,EAEVF,IAFU,CAEL,UAACC,MAAD,EAAY;AAChBH,YAAAA,eAAe,CAACG,MAAM,CAACE,OAAR,CAAf;AACA,mBAAOF,MAAP;AACD,WALU,EAMVG,KANU,CAMJ,UAACC,GAAD,EAAS;AACdC,YAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,WARU,CALf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP,EAAoBC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEMhB,YAAY,CAACc,OAAb,CAAqBC,GAArB,CAFN;;AAAA;AAENE,UAAAA,GAFM;AAGZD,UAAAA,YAAY,CAACC,GAAD,CAAZ;AAHY,4CAILA,GAJK;;AAAA;AAAA;AAAA;AAMZL,UAAAA,OAAO,CAACM,GAAR,CAAY,OAAZ,EAAqB,aAAET,OAAvB;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAUA,OAAO,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AACD,CAFM","sourcesContent":["//IMPORTS\nimport {\n  Text,\n  SafeAreaView,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Pressable,\n  ScrollView,\n} from 'react-native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { useState } from 'react'\nimport { colors } from '../assets/colors'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList, Course } from '../RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Icon } from 'react-native-elements'\nimport React from 'react'\n\ntype coursesScreenProp = NativeStackNavigationProp<\n  RootStackParamList,\n  'Courses'\n>\n\nasync function getProfsByCourse(\n  course: string,\n  setFilteredData: any\n): Promise<any> {\n  // return await fetch(`https://profesy.herokuapp.com/?name=${name}`)\n  return await fetch(`http://localhost:8080/profsByCourse?course=${course}`)\n    .then((result) => result.json())\n    .then((result) => {\n      setFilteredData(result.message)\n      return result\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n// getItem - Params(key: string, setStateItem: function) => string\nconst getItem = async (key: string, setStateItem: any) => {\n  try {\n    const val = await AsyncStorage.getItem(key)\n    setStateItem(val)\n    return val\n  } catch (e: any) {\n    console.log('error', e.message)\n  }\n}\n\nexport const Courses = () => {\n  return <Text>Hello from Courses</Text>\n}\n"]},"metadata":{},"sourceType":"module"}