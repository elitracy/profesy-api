{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { colors, randomColor } from \"../assets/colors\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useState } from 'react';\nimport { Icon } from 'react-native-elements';\nimport fuzzysort from 'fuzzysort';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Professor(Props) {\n  var allCourses = Array.from(_toConsumableArray(new Set(Props.route.params.courses.map(function (obj) {\n    return obj.course;\n  })))).sort();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      wordEntered = _useState2[0],\n      setWordEntered = _useState2[1];\n\n  var _useState3 = useState(colors.PURPLE),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchBG = _useState4[0],\n      setSearchBG = _useState4[1];\n\n  var _useState5 = useState(allCourses),\n      _useState6 = _slicedToArray(_useState5, 2),\n      courses = _useState6[0],\n      setCourses = _useState6[1];\n\n  var navigation = useNavigation();\n\n  function handleSearch(search, courses, setCourses) {\n    setCourses(search.length === 0 ? allCourses : fuzzysort.go(search, courses).map(function (item) {\n      return item.target;\n    }));\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsxs(View, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Text, {\n          style: [styles.title, {\n            paddingHorizontal: 10\n          }],\n          children: Props.route.params.profName\n        }), _jsx(View, {\n          style: {\n            borderColor: colors.GRAY\n          },\n          children: _jsx(Text, {\n            style: styles.departmentTitle,\n            children: \"Courses\"\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          width: '90%',\n          marginLeft: 15,\n          marginTop: 5\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            width: '100%',\n            alignItems: 'center',\n            paddingBottom: 10\n          },\n          children: [_jsx(Icon, {\n            name: \"search\",\n            style: {\n              opacity: 0.7\n            },\n            tvParallaxProperties: null\n          }), _jsx(TextInput, {\n            onChangeText: function onChangeText(word) {\n              setWordEntered(word);\n              handleSearch(word, courses, setCourses);\n            },\n            onFocus: function onFocus() {\n              return setSearchBG(colors.GREEN);\n            },\n            onBlur: function onBlur() {\n              return setSearchBG(colors.PURPLE);\n            },\n            value: wordEntered,\n            clearTextOnFocus: true,\n            placeholder: \"search for course\",\n            style: [styles.inputStyles, {\n              borderColor: searchBG,\n              flex: 5,\n              marginLeft: -30\n            }]\n          })]\n        })\n      }), _jsx(ScrollView, {\n        style: styles.departments,\n        children: courses.map(function (course) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.departmentContainer, {\n              shadowColor: randomColor()\n            }],\n            onPress: function onPress() {\n              navigation.navigate('Course', {\n                course: course,\n                prof: Props.route.params.profName\n              });\n            },\n            children: _jsxs(Text, {\n              style: styles.department,\n              children: [course.substring(0, 4), _jsx(Text, {\n                style: {\n                  color: 'white',\n                  opacity: 0.8,\n                  fontWeight: '300'\n                },\n                children: course.substring(4, course.length)\n              })]\n            })\n          }, undefined);\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginHorizontal: 'auto',\n    height: '88%',\n    backgroundColor: 'black'\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 40,\n    marginTop: 1,\n    marginBottom: 5,\n    paddingHorizontal: 10,\n    color: 'white'\n  },\n  departmentTitle: {\n    fontSize: 30,\n    paddingHorizontal: 30,\n    textAlign: 'center',\n    color: 'white'\n  },\n  departmentContainer: {},\n  department: {\n    fontSize: 35,\n    textAlign: 'left',\n    color: 'white',\n    fontWeight: '500',\n    letterSpacing: 5,\n    paddingVertical: 15\n  },\n  departments: {},\n  inputStyles: {\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 5,\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/elitracy/Documents/Coding/Projects/Profesy/public/components/Professor.tsx"],"names":["colors","randomColor","useNavigation","useState","Icon","fuzzysort","React","Professor","Props","allCourses","Array","from","Set","route","params","courses","map","obj","course","sort","wordEntered","setWordEntered","PURPLE","searchBG","setSearchBG","setCourses","navigation","handleSearch","search","length","go","item","target","styles","container","display","flexDirection","title","paddingHorizontal","profName","borderColor","GRAY","departmentTitle","width","marginLeft","marginTop","alignItems","paddingBottom","opacity","word","GREEN","inputStyles","flex","departments","departmentContainer","shadowColor","navigate","prof","department","substring","color","fontWeight","undefined","StyleSheet","create","justifyContent","marginHorizontal","height","backgroundColor","textAlign","fontSize","marginBottom","letterSpacing","paddingVertical","borderWidth","borderRadius","padding"],"mappings":"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","sourcesContent":["// IMPORTS\nimport {\n  TouchableOpacity,\n  TextInput,\n  View,\n  ScrollView,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n} from 'react-native'\nimport { colors, randomColor } from '../assets/colors'\nimport { RootStackParamList, Course } from '../RootStackParams'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { useNavigation } from '@react-navigation/native'\nimport { useState } from 'react'\nimport { Icon } from 'react-native-elements'\nimport fuzzysort from 'fuzzysort'\nimport React from 'react'\n\ninterface Props {\n  route: { params: { profName: string; courses: Course[] } }\n}\n\ntype professorScreenProp = NativeStackNavigationProp<\n  RootStackParamList,\n  'Professor'\n>\n\nexport function Professor(Props: Props) {\n  // sort all of professor courses\n  const allCourses = Array.from([\n    ...new Set(\n      Props.route.params.courses.map((obj) => {\n        return obj.course\n      })\n    ),\n  ]).sort()\n\n  // SET STATES\n  const [wordEntered, setWordEntered] = useState('')\n  const [searchBG, setSearchBG] = useState(colors.PURPLE)\n  const [courses, setCourses] = useState(allCourses)\n\n  const navigation = useNavigation<professorScreenProp>()\n\n  // FZF String match\n  // handleSearch - Params(search:string, course:string[], setCourses:function)\n  function handleSearch(search: string, courses: string[], setCourses: any) {\n    setCourses(\n      search.length === 0\n        ? allCourses\n        : fuzzysort.go(search, courses).map((item) => {\n            return item.target\n          })\n    )\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View>\n        {/*HEADERS*/}\n        <View style={{ display: 'flex', flexDirection: 'row' }}>\n          <Text style={[styles.title, { paddingHorizontal: 10 }]}>\n            {Props.route.params.profName}\n          </Text>\n          <View\n            style={{\n              borderColor: colors.GRAY,\n            }}\n          >\n            <Text style={styles.departmentTitle}>Courses</Text>\n          </View>\n        </View>\n\n        {/*SEARCH*/}\n        <View style={{ width: '90%', marginLeft: 15, marginTop: 5 }}>\n          <View\n            style={{\n              flexDirection: 'row',\n              width: '100%',\n              alignItems: 'center',\n              paddingBottom: 10,\n            }}\n          >\n            <Icon\n              name=\"search\"\n              style={{ opacity: 0.7 }}\n              tvParallaxProperties={null}\n            />\n            <TextInput\n              onChangeText={(word) => {\n                setWordEntered(word)\n                handleSearch(word, courses, setCourses)\n              }}\n              onFocus={() => setSearchBG(colors.GREEN)}\n              onBlur={() => setSearchBG(colors.PURPLE)}\n              value={wordEntered}\n              clearTextOnFocus={true}\n              placeholder=\"search for course\"\n              style={[\n                styles.inputStyles,\n                { borderColor: searchBG, flex: 5, marginLeft: -30 },\n              ]}\n            />\n          </View>\n        </View>\n\n        {/*COURSE LIST*/}\n        <ScrollView style={styles.departments}>\n          {courses.map((course) => {\n            return (\n              <TouchableOpacity\n                style={[\n                  styles.departmentContainer,\n                  { shadowColor: randomColor() },\n                ]}\n                onPress={() => {\n                  navigation.navigate('Course', {\n                    course: course,\n                    prof: Props.route.params.profName,\n                  })\n                }}\n                key={undefined}\n              >\n                <Text style={styles.department}>\n                  {course.substring(0, 4)}\n                  <Text\n                    style={{\n                      color: 'white',\n                      opacity: 0.8,\n                      fontWeight: '300',\n                      /*(parseFloat(value.overallGPA) > 3.4) ? colors.BLUE\n                : (parseFloat(value.overallGPA) > 2.8) ? colors.GREEN \n                : (parseFloat(value.overallGPA)> 2.0) ? colors.ORANGE \n                : colors.RED*/\n                    }}\n                  >\n                    {course.substring(4, course.length)}\n                  </Text>\n                </Text>\n              </TouchableOpacity>\n            )\n          })}\n        </ScrollView>\n      </View>\n    </SafeAreaView>\n  )\n}\n\n// STYLES\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginHorizontal: 'auto',\n    height: '88%',\n    backgroundColor: 'black',\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 40,\n    marginTop: 1,\n    marginBottom: 5,\n    paddingHorizontal: 10,\n    color: 'white',\n  },\n  departmentTitle: {\n    fontSize: 30,\n    paddingHorizontal: 30,\n    textAlign: 'center',\n    color: 'white',\n  },\n  departmentContainer: {\n    // marginHorizontal: 30,\n    // marginVertical: 10,\n    // shadowOffset: { width: 3, height: 2 },\n    // shadowOpacity: 1,\n    // shadowRadius: 0,\n  },\n  department: {\n    fontSize: 35,\n    textAlign: 'left',\n    color: 'white',\n    fontWeight: '500',\n    letterSpacing: 5,\n    paddingVertical: 15,\n  },\n  departments: {\n    // flex: 6,\n    // justifyContent: 'flex-start',\n    // paddingBottom: 100,\n    // height: '80%',\n  },\n  inputStyles: {\n    borderWidth: 2,\n    borderRadius: 5,\n    padding: 5,\n    fontSize: 15,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}