{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { colors } from \"../assets/colors\";\nimport { Icon } from 'react-native-elements';\nimport { React, useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar handleSearch = function handleSearch(text, profList, setProfList, originalProfList) {\n  var searchWord = text;\n  setProfList(searchWord);\n  var newFilter = profList.filter(function (value) {\n    return value.toLowerCase().includes(searchWord.toLowerCase());\n  });\n\n  if (searchWord === undefined) {\n    setProfList(originalProfList);\n  } else {\n    setProfList(newFilter);\n  }\n};\n\nfunction getProfsByCourse(course, setProfList, setOriginalProfList) {\n  return _regeneratorRuntime.async(function getProfsByCourse$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/profsByCourse?course=\" + course).then(function (result) {\n            return result.json();\n          }).then(function (result) {\n            setProfList(result.courses[0].profList);\n            setOriginalProfList(result.courses[0].profList);\n            return result;\n          }).catch(function (err) {\n            console.error(err);\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar getItem = function getItem(key, setStateItem) {\n  var val;\n  return _regeneratorRuntime.async(function getItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          val = _context2.sent;\n          setStateItem(val);\n          return _context2.abrupt(\"return\", val);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('error', _context2.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nexport var Courses = function Courses(Props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      profList = _useState2[0],\n      setProfList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      originalProfList = _useState4[0],\n      setOriginalProfList = _useState4[1];\n\n  var _useState5 = useState('black'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchBG = _useState6[0],\n      setSearchBG = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      wordEntered = _useState8[0],\n      setWordEntered = _useState8[1];\n\n  useEffect(function () {\n    return getProfsByCourse(Props.route.params.courseName, setProfList);\n  }, [Props.route.params.courseName]);\n  return _jsxs(SafeAreaView, {\n    style: {\n      backgroundColor: 'black',\n      height: '88%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [_jsx(View, {\n      style: {\n        width: '90%'\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: 'left',\n          color: 'white',\n          fontSize: 30,\n          fontWeight: 'bold'\n        },\n        children: Props.route.params.courseName\n      })\n    }), _jsxs(View, {\n      style: {\n        width: '95%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'white',\n          borderRadius: 5,\n          width: '100%'\n        },\n        children: [_jsx(Icon, {\n          name: \"search\",\n          style: {\n            opacity: 0.7,\n            marginLeft: 5\n          },\n          tvParallaxProperties: null\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(data) {\n            data.length === 0 ? setProfList(originalProfList) : handleSearch(data, profList, setProfList, originalProfList);\n            setWordEntered(data === undefined ? '' : data);\n          },\n          value: wordEntered,\n          placeholder: \"search\",\n          style: {\n            borderWidth: 2,\n            borderRightWidth: 0,\n            borderLeftWidth: 0,\n            padding: 10,\n            paddingLeft: 30,\n            fontSize: 15,\n            borderColor: searchBG,\n            width: '100%',\n            marginLeft: -30\n          }\n        })]\n      }), _jsx(View, {\n        style: {\n          width: '100%'\n        },\n        children: profList.length !== 0 && profList.sort().map(function (value) {\n          return _jsxs(View, {\n            style: {\n              width: '100%',\n              backgroundColor: 'black',\n              borderRadius: 15,\n              flexDirection: 'row',\n              padding: 5,\n              marginVertical: 5\n            },\n            children: [_jsx(Text, {\n              style: {\n                color: 'white',\n                textAlign: 'left',\n                width: '100%',\n                padding: 5,\n                color: 'white',\n                fontSize: 25,\n                textAlign: 'left',\n                fontWeight: '500'\n              },\n              children: value\n            }), _jsx(Text, {\n              style: {\n                color: 'white',\n                textAlign: 'right',\n                width: '100%',\n                padding: 5,\n                paddingLeft: 15,\n                color: colors.BLUE,\n                fontSize: 25,\n                textAlign: 'left',\n                fontWeight: '800'\n              },\n              children: 3.82\n            })]\n          }, undefined);\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"sources":["/Users/elitracy/Documents/Coding/Projects/Profesy/public/components/Courses.tsx"],"names":["AsyncStorage","colors","Icon","React","useEffect","useState","handleSearch","text","profList","setProfList","originalProfList","searchWord","newFilter","filter","value","toLowerCase","includes","undefined","getProfsByCourse","course","setOriginalProfList","fetch","then","result","json","courses","catch","err","console","error","getItem","key","setStateItem","val","log","message","Courses","Props","searchBG","setSearchBG","wordEntered","setWordEntered","route","params","courseName","backgroundColor","height","display","flexDirection","alignItems","width","textAlign","color","fontSize","fontWeight","justifyContent","borderRadius","opacity","marginLeft","data","length","borderWidth","borderRightWidth","borderLeftWidth","padding","paddingLeft","borderColor","sort","map","marginVertical","BLUE"],"mappings":"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","sourcesContent":["//IMPORTS\nimport {\n  Text,\n  SafeAreaView,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Pressable,\n  ScrollView,\n} from 'react-native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { colors } from '../assets/colors'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Icon } from 'react-native-elements'\nimport { React, useEffect, useState } from 'react'\n\ntype coursesScreenProp = NativeStackNavigationProp<\n  RootStackParamList,\n  'Courses'\n>\n\ninterface Props {\n  route: {\n    params: {\n      courseName: string\n    }\n  }\n}\n\n// FZF STRING MATCH\n// handleSearch - Params(text:string)\nconst handleSearch = (\n  text: string,\n  profList: string[],\n  setProfList: any,\n  originalProfList: string[]\n) => {\n  const searchWord = text\n  setProfList(searchWord)\n  const newFilter: string[] = profList.filter((value) => {\n    return value.toLowerCase().includes(searchWord.toLowerCase())\n  })\n  if (searchWord === undefined) {\n    setProfList(originalProfList)\n  } else {\n    setProfList(newFilter)\n  }\n}\n\nasync function getProfsByCourse(\n  course: string,\n  setProfList: any,\n  setOriginalProfList: any\n): Promise<any> {\n  // return await fetch(`https://profesy.herokuapp.com/?name=${name}`)\n  return await fetch(`http://localhost:8080/profsByCourse?course=${course}`)\n    .then((result) => result.json())\n    .then((result) => {\n      setProfList(result.courses[0].profList)\n      setOriginalProfList(result.courses[0].profList) //save prof list for if search is empty\n      return result\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n}\n// getItem - Params(key: string, setStateItem: function) => string\nconst getItem = async (key: string, setStateItem: any) => {\n  try {\n    const val = await AsyncStorage.getItem(key)\n    setStateItem(val)\n    return val\n  } catch (e: any) {\n    console.log('error', e.message)\n  }\n}\n\nexport const Courses = (Props: Props) => {\n  const [profList, setProfList] = useState([])\n  const [originalProfList, setOriginalProfList] = useState([])\n  const [searchBG, setSearchBG] = useState('black')\n  const [wordEntered, setWordEntered] = useState('')\n\n  useEffect(\n    () => getProfsByCourse(Props.route.params.courseName, setProfList),\n    [Props.route.params.courseName]\n  )\n\n  // console.log(profList)\n  return (\n    <SafeAreaView\n      style={{\n        backgroundColor: 'black',\n        height: '88%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <View\n        style={{\n          width: '90%',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'left',\n            color: 'white',\n            fontSize: 30,\n            fontWeight: 'bold',\n          }}\n        >\n          {Props.route.params.courseName}\n        </Text>\n      </View>\n      {/*search bar*/}\n      <View\n        style={{\n          width: '95%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'white',\n            borderRadius: 5,\n            width: '100%',\n          }}\n        >\n          <Icon\n            name=\"search\"\n            style={{ opacity: 0.7, marginLeft: 5 }}\n            tvParallaxProperties={null}\n          />\n          <TextInput\n            // queries both at first time for better UX\n            onChangeText={(data) => {\n              data.length === 0\n                ? setProfList(originalProfList)\n                : handleSearch(data, profList, setProfList, originalProfList)\n              setWordEntered(data === undefined ? '' : data)\n            }}\n            value={wordEntered}\n            placeholder=\"search\"\n            style={{\n              borderWidth: 2,\n              borderRightWidth: 0,\n              borderLeftWidth: 0,\n              padding: 10,\n              paddingLeft: 30,\n              fontSize: 15,\n              borderColor: searchBG,\n              width: '100%',\n              marginLeft: -30,\n            }}\n          />\n        </View>\n        <View style={{ width: '100%' }}>\n          {profList.length !== 0 &&\n            profList.sort().map((value) => {\n              return (\n                <View\n                  key={undefined}\n                  style={{\n                    width: '100%',\n                    backgroundColor: 'black',\n                    borderRadius: 15,\n                    flexDirection: 'row',\n                    padding: 5,\n                    marginVertical: 5,\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: 'white',\n                      textAlign: 'left',\n                      width: '100%',\n                      padding: 5,\n                      color: 'white',\n                      fontSize: 25,\n                      textAlign: 'left',\n                      fontWeight: '500',\n                    }}\n                  >\n                    {value}\n                  </Text>\n                  <Text\n                    style={{\n                      color: 'white',\n                      textAlign: 'right',\n                      width: '100%',\n                      padding: 5,\n                      paddingLeft: 15,\n                      color: colors.BLUE,\n                      fontSize: 25,\n                      textAlign: 'left',\n                      fontWeight: '800',\n                    }}\n                  >\n                    {3.82}\n                  </Text>\n                </View>\n              )\n            })}\n        </View>\n      </View>\n    </SafeAreaView>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}