{"version":3,"sources":["../../../src/commands/info/diagnosticsAsync.ts"],"names":["packageJSON","require","getEnvironmentInfoAsync","envinfo","run","System","Binaries","IDEs","Managers","SDKs","npmPackages","npmGlobalPackages","yaml","title","version","actionAsync","projectRoot","spinner","start","info","workflow","process","cwd","lines","split","pop","push","stop","Log","log","join"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AAEA,SAASC,uBAAT,GAAoD;AAClD,SAAOC,mBAAQC,GAAR,CACL;AACEC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,OAAP,CADV;AAEEC,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,UAAxB,CAFZ;AAGEC,IAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,gBAAV,CAHR;AAIEC,IAAAA,QAAQ,EAAE,CAAC,WAAD,CAJZ;AAKEC,IAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,aAAZ,CALR;AAMEC,IAAAA,WAAW,EAAE,CACX,MADW,EAEX,OAFW,EAGX,WAHW,EAIX,cAJW,EAKX,kBALW,EAMX,kBANW,EAOX,sBAPW,EAQX,oBARW,EASX,mBATW,EAUX,OAVW,CANf;AAkBEC,IAAAA,iBAAiB,EAAE,CAAC,UAAD,EAAa,SAAb;AAlBrB,GADK,EAqBL;AACEC,IAAAA,IAAI,EAAE,IADR;AAEEC,IAAAA,KAAK,EAAG,YAAWb,WAAW,CAACc,OAAQ;AAFzC,GArBK,CAAP;AA0BD;;AAEM,eAAeC,WAAf,CAA2BC,WAA3B,EAA+D;AACpE;AACA,QAAMC,OAAO,GAAG,gBAAK,yBAAL,EAA+BC,KAA/B,EAAhB;AACA,QAAMC,IAAI,GAAG,MAAMjB,uBAAuB,EAA1C;AACA,QAAMkB,QAAQ,GAAG,gCAAiBJ,WAAjB,aAAiBA,WAAjB,cAAiBA,WAAjB,GAAgCK,OAAO,CAACC,GAAR,EAAhC,CAAjB;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,IAAX,CAAd;AACAD,EAAAA,KAAK,CAACE,GAAN;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAY,sBAAqBN,QAAS,EAA1C,EAPoE,CASpE;;AACAH,EAAAA,OAAO,CAACU,IAAR;;AACAC,iBAAIC,GAAJ,CAAQN,KAAK,CAACO,IAAN,CAAW,IAAX,IAAmB,IAA3B;AACD","sourcesContent":["import { getDefaultTarget } from '@expo/config';\nimport envinfo from 'envinfo';\n\nimport Log from '../../log';\nimport { ora } from '../../utils/ora';\n\nconst packageJSON = require('../../../package.json');\n\nfunction getEnvironmentInfoAsync(): Promise<string> {\n  return envinfo.run(\n    {\n      System: ['OS', 'Shell'],\n      Binaries: ['Node', 'Yarn', 'npm', 'Watchman'],\n      IDEs: ['Xcode', 'Android Studio'],\n      Managers: ['CocoaPods'],\n      SDKs: ['iOS SDK', 'Android SDK'],\n      npmPackages: [\n        'expo',\n        'react',\n        'react-dom',\n        'react-native',\n        'react-native-web',\n        'react-navigation',\n        '@expo/webpack-config',\n        '@expo/metro-config',\n        'babel-preset-expo',\n        'metro',\n      ],\n      npmGlobalPackages: ['expo-cli', 'eas-cli'],\n    },\n    {\n      yaml: true,\n      title: `Expo CLI ${packageJSON.version} environment info`,\n    }\n  );\n}\n\nexport async function actionAsync(projectRoot: string): Promise<void> {\n  // Process takes a while so we show a spinner\n  const spinner = ora(`üîç Creating Diagnostics`).start();\n  const info = await getEnvironmentInfoAsync();\n  const workflow = getDefaultTarget(projectRoot ?? process.cwd());\n  const lines = info.split('\\n');\n  lines.pop();\n  lines.push(`    Expo Workflow: ${workflow}`);\n\n  // Stop and hide spinner\n  spinner.stop();\n  Log.log(lines.join('\\n') + '\\n');\n}\n"],"file":"diagnosticsAsync.js"}